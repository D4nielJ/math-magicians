{"version":3,"sources":["components/calc/logic/displayLogic.js","components/calc/display.js","components/calc/calcButton.js","components/calc/buttonsContainer.js","components/calc/logic/operate.js","components/calc/logic/calculate.js","components/calc.js","app.js","index.js"],"names":["displayLogic","total","next","operation","display","holder","operationChar","Display","props","classOperation","classHolder","className","defaultProps","CalcButton","value","colored","span","classList","type","ButtonsContainer","click","keyDown","onClick","onKeyDown","name","operate","numberOne","numberTwo","one","Big","two","plus","toString","minus","times","div","mod","Error","calculate","obj","buttonName","undefined","match","includes","parseFloat","Calc","useState","calc","setCalc","updateState","key","a","e","target","dataset","handleClick","preventDefault","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb41f8f.chunk.js","sourcesContent":["const displayLogic = (total, next, operation) => {\n  let display = 0;\n  let holder = 0;\n  let operationChar = 0;\n  if (operation) {\n    operationChar = operation;\n  }\n  if (total) {\n    display = total;\n  }\n  if (next) {\n    display = next;\n  }\n  if (total && operation) {\n    display = ' ';\n    holder = total;\n    if (next) {\n      display = next;\n    }\n  }\n  return { display, holder, operationChar };\n};\n\nexport default displayLogic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport displayLogic from './logic/displayLogic';\n\nconst Display = (props) => {\n  const { total, next, operation } = props;\n  const { operationChar, holder, display } = displayLogic(total, next, operation);\n  let classOperation = 'display__operation';\n  if (operationChar === 0) {\n    classOperation = 'display__operation no-opacity';\n  }\n  let classHolder = 'display__holder';\n  if (holder === 0) {\n    classHolder = 'display__holder no-opacity';\n  }\n  return (\n    <div className=\"calc__display\">\n      <div className={classOperation}>{operationChar}</div>\n      <div className={classHolder}>{holder}</div>\n      <div className=\"display__next\">{display}</div>\n    </div>\n  );\n};\n\nDisplay.propTypes = {\n  total: PropTypes.string,\n  next: PropTypes.string,\n  operation: PropTypes.string,\n};\n\nDisplay.defaultProps = {\n  total: '',\n  next: '',\n  operation: '',\n};\n\nexport { Display as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CalcButton = (props) => {\n  const { value, colored, span } = props;\n  const classList = `calc__btn\n      ${colored ? ' btn--colored' : ''} \n      ${span !== 1 ? ` btn--span-${span}` : ''}`;\n  return (\n    <button type=\"button\" className={classList} data-name={value}>\n      {value}\n    </button>\n  );\n};\n\nCalcButton.propTypes = {\n  value: PropTypes.string,\n  colored: PropTypes.bool,\n  span: PropTypes.number,\n};\n\nCalcButton.defaultProps = {\n  value: 'X',\n  colored: false,\n  span: 1,\n};\n\nexport { CalcButton as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CalcButton from './calcButton';\n\nconst ButtonsContainer = (props) => {\n  const { click, keyDown } = props;\n  return (\n    <div className=\"calc__btns-container\" onClick={click} onKeyDown={keyDown} aria-hidden=\"true\">\n      <CalcButton name=\"clear\" value=\"AC\" />\n      <CalcButton name=\"sign\" value=\"+/-\" />\n      <CalcButton name=\"percentage\" value=\"%\" />\n      <CalcButton name=\"division\" value=\"รท\" colored />\n\n      <CalcButton name=\"number\" value=\"7\" />\n      <CalcButton name=\"number\" value=\"8\" />\n      <CalcButton name=\"number\" value=\"9\" />\n      <CalcButton name=\"mult\" value=\"x\" colored />\n\n      <CalcButton name=\"number\" value=\"4\" />\n      <CalcButton name=\"number\" value=\"5\" />\n      <CalcButton name=\"number\" value=\"6\" />\n      <CalcButton name=\"substr\" value=\"-\" colored />\n\n      <CalcButton name=\"number\" value=\"1\" />\n      <CalcButton name=\"number\" value=\"2\" />\n      <CalcButton name=\"number\" value=\"3\" />\n      <CalcButton name=\"sum\" value=\"+\" colored />\n\n      <CalcButton name=\"number\" value=\"0\" span={2} />\n      <CalcButton name=\"floating\" value=\".\" />\n      <CalcButton name=\"result\" value=\"=\" colored />\n    </div>\n  );\n};\n\nButtonsContainer.propTypes = {\n  click: PropTypes.func,\n  keyDown: PropTypes.func,\n};\n\nButtonsContainer.defaultProps = {\n  click: () => -1,\n  keyDown: () => -1,\n};\n\nexport { ButtonsContainer as default };\n","// eslint-disable-next-line react/prefer-stateless-function\nimport Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === undefined) {\n    return {};\n  }\n\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.next}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return {};\n  }\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React, { useState } from 'react';\nimport Display from './calc/display';\nimport ButtonsContainer from './calc/buttonsContainer';\nimport calculate from './calc/logic/calculate';\nimport './calc.css';\n\nconst Calc = () => {\n  const [calc, setCalc] = useState({ total: null, next: null, operation: null });\n\n  const updateState = async (obj, key) => {\n    let { total, next, operation } = await calculate(obj, key);\n    if (total === undefined) {\n      total = obj.total;\n    }\n    if (next === undefined) {\n      next = obj.next;\n    }\n    if (operation === undefined) {\n      operation = obj.operation;\n    }\n    setCalc({ total, next, operation });\n  };\n\n  const handleClick = (obj, e) => {\n    updateState(obj, e.target.dataset.name);\n  };\n\n  const handleKeyDown = (e) => {\n    e.preventDefault();\n  };\n\n  const { total, next, operation } = calc;\n\n  return (\n    <div className=\"calc\">\n      <Display total={total} next={next} operation={operation} />\n      <ButtonsContainer click={(e) => handleClick(calc, e)} keyDown={handleKeyDown} />\n    </div>\n  );\n};\n\nexport { Calc as default };\n","import React from 'react';\nimport Calc from './components/calc';\n\nconst App = () => (\n  <div className=\"App\">\n    <Calc />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport 'modern-css-reset';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}